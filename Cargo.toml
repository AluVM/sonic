[workspace]
members = [".", "api", "cli", "callreq", "persistence/fs"]
default-members = [".", "api", "callreq", "persistence/fs"]
resolver = "2"

[workspace.package]
version = "0.12.0-rc.2"
authors = ["Dr Maxim Orlovsky <orlovsky@ubideco.org>"]
repository = "https://github.com/AluVM/sonare"
homepage = "https://ubideco.org/SONARE"
keywords = ["state-machines", "distributed-systems", "decentralized", "partially-replicated", "runtime-environment"]
readme = "README.md"
license = "Apache-2.0"
edition = "2021"
rust-version = "1.82.0" # Due to precise capturing with `use`

[workspace.dependencies]
amplify = "~4.9.0"
strict_encoding = "~2.9.1"
strict_types = "~2.9.0"
commit_verify = "0.12.0-rc.1"
aluvm = "0.12.0-rc.1"
ultrasonic = "0.12.0-rc.2"
sonic-api = { version = "0.12.0-rc.2", path = "api" }
sonic-callreq = { version = "0.12.0-rc.2", path = "callreq" }
sonic-persist-fs = { version = "0.12.0-rc.2", path = "persistence/fs" }
hypersonic = { version = "0.12.0-rc.2", path = "." }
aora = ">=0.6.4"
binfile = "0.2.0"
baid64 = "0.4.1"
indexmap = "2.9.0"
chrono = "0.4.38"
serde = { version = "1", features = ["derive"] }
serde_yaml = "0.9.34"
toml = "0.8.22"

[package]
name = "hypersonic"
version.workspace = true
authors.workspace = true
description = "Formally-verifiable distributed software"
repository.workspace = true
homepage.workspace = true
keywords.workspace = true
categories = ["algorithms", "cryptography", "science", "compilers"]
readme.workspace = true
license.workspace = true
edition.workspace = true
rust-version.workspace = true
exclude = [".github"]

[[bin]]
name = "sonic-stl"
required-features = ["stl", "vesper"]

[lib]
name = "hypersonic"

[[example]]
name = "dao"

[[test]]
name = "dao"

[[test]]
name = "reorgs"

[dependencies]
amplify = { workspace = true }
strict_encoding.workspace = true
strict_types.workspace = true
commit_verify.workspace = true
aluvm.workspace = true
ultrasonic.workspace = true
sonic-api.workspace = true
sonic-callreq.workspace = true
binfile = { workspace = true, optional = true }
indexmap.workspace = true
serde = { workspace = true, optional = true }

[dev-dependencies]
sonix = { path = "./cli" }
sonic-persist-fs.workspace = true
rand = "0.9.1"
petgraph = "0.8.1"

[features]
default = ["std"]
all = ["stl", "vesper", "binfile", "std", "serde"]

binfile = ["sonic-api/binfile", "dep:binfile"]
std = ["sonic-api/std", "sonic-callreq/std"]
vesper = ["ultrasonic/vesper"]
stl = ["commit_verify/stl", "ultrasonic/stl", "strict_types/armor"]

serde = [
    "dep:serde",
    "amplify/serde",
    "strict_encoding/serde",
    "commit_verify/serde",
    "ultrasonic/serde",
    "sonic-api/serde",
    "sonic-callreq/serde",
]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
rand = { version = "0.9.1", optional = true }
getrandom = { version = "0.3", features = ["wasm_js"] }
getrandom2 = { package = "getrandom", version = "0.2", features = ["js"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

[package.metadata.docs.rs]
features = ["all"]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(coverage_nightly)'] }
